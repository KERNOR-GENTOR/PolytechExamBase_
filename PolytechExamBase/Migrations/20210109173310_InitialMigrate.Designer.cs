// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PolytechExamBase.Models;

namespace PolytechExamBase.Migrations
{
    [DbContext(typeof(PolytechExamBaseNewContext))]
    [Migration("20210109173310_InitialMigrate")]
    partial class InitialMigrate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PolytechExamBase.Models.Dbusers", b =>
                {
                    b.Property<long>("FuckingUserId")
                        .HasColumnName("Fucking_User_ID")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("FirstName")
                        .HasColumnName("First_Name")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("LastName")
                        .HasColumnName("Last_Name")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("FuckingUserId")
                        .HasName("DBUsers_PK");

                    b.ToTable("DBUsers");
                });

            modelBuilder.Entity("PolytechExamBase.Models.Marks", b =>
                {
                    b.Property<long>("MarkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Mark_ID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Mark")
                        .HasColumnType("int");

                    b.Property<long>("PassedTaskId")
                        .HasColumnName("Passed_Task_ID")
                        .HasColumnType("bigint");

                    b.HasKey("MarkId")
                        .HasName("Marks_PK");

                    b.HasIndex("PassedTaskId");

                    b.ToTable("Marks");
                });

            modelBuilder.Entity("PolytechExamBase.Models.PassedTasks", b =>
                {
                    b.Property<long>("PassedTaskId")
                        .HasColumnName("Passed_Task_ID")
                        .HasColumnType("bigint");

                    b.Property<string>("CodeAnswer")
                        .HasColumnName("Code_Answer")
                        .HasColumnType("nvarchar(2048)")
                        .HasMaxLength(2048);

                    b.Property<bool?>("Successful")
                        .HasColumnType("bit");

                    b.Property<long>("TaskId")
                        .HasColumnName("Task_ID")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnName("User_ID")
                        .HasColumnType("bigint");

                    b.HasKey("PassedTaskId")
                        .HasName("Passed_Task_PK");

                    b.HasIndex("TaskId");

                    b.HasIndex("UserId");

                    b.ToTable("Passed_Tasks");
                });

            modelBuilder.Entity("PolytechExamBase.Models.Tasks", b =>
                {
                    b.Property<long>("TaskId")
                        .HasColumnName("Task_ID")
                        .HasColumnType("bigint");

                    b.Property<string>("CodeToTest")
                        .HasColumnName("Code_To_Test")
                        .HasColumnType("nvarchar(3999)")
                        .HasMaxLength(3999);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(512)")
                        .HasMaxLength(512);

                    b.Property<string>("Difficulty")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<long>("TeacherId")
                        .HasColumnName("Teacher_ID")
                        .HasColumnType("bigint");

                    b.Property<string>("Topic")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("UnitTest")
                        .HasColumnName("Unit_Test")
                        .HasColumnType("nvarchar(2048)")
                        .HasMaxLength(2048);

                    b.HasKey("TaskId")
                        .HasName("Task_PK");

                    b.HasIndex("TeacherId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("PolytechExamBase.Models.Marks", b =>
                {
                    b.HasOne("PolytechExamBase.Models.PassedTasks", "PassedTask")
                        .WithMany("Marks")
                        .HasForeignKey("PassedTaskId")
                        .HasConstraintName("Marks_Passed_Tasks_FK")
                        .IsRequired();
                });

            modelBuilder.Entity("PolytechExamBase.Models.PassedTasks", b =>
                {
                    b.HasOne("PolytechExamBase.Models.Tasks", "Task")
                        .WithMany("PassedTasks")
                        .HasForeignKey("TaskId")
                        .HasConstraintName("Passed_Task_Task_FK")
                        .IsRequired();

                    b.HasOne("PolytechExamBase.Models.Dbusers", "User")
                        .WithMany("PassedTasks")
                        .HasForeignKey("UserId")
                        .HasConstraintName("Passed_Task_DBUsers_FK")
                        .IsRequired();
                });

            modelBuilder.Entity("PolytechExamBase.Models.Tasks", b =>
                {
                    b.HasOne("PolytechExamBase.Models.Dbusers", "Teacher")
                        .WithMany("Tasks")
                        .HasForeignKey("TeacherId")
                        .HasConstraintName("Task_DBUsers_FK")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
